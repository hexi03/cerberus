//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cerberus.Models
{
    using cerberus.Models.Reports;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Data.Entity;
    using System.Linq;
    using System.Runtime.InteropServices.ComTypes;
    using System.Text.Json;
    using System.Text.Json.Serialization;
    using System.Web.Mvc;
    using System.Web.UI.WebControls;

    public partial class Report
    {
        public enum Types {
            WHInventarisation,
            WHReplenishment,
            WHRelease,
            WHShipment,
            WHWorkShiftReplenishment,
            FSWorkShift,
            FSSupplyRequirement,
            MWorkPlan,
            MProductments,
            MSales,
            MInventarisationPlan,

        }
        [ScaffoldColumn(false)]
        [HiddenInput(DisplayValue = false)]
        public int? id { get; set; }

        [ScaffoldColumn(false)]
        [HiddenInput(DisplayValue = false)]
        public int department_id { get; set; }

        [ScaffoldColumn(false)]
        [HiddenInput(DisplayValue = false)]
        public DateTime timestamp { get; set; }

        [HiddenInput(DisplayValue = false)]
        public string report_type { get; set; }

        [HiddenInput(DisplayValue = false)]
        [ScaffoldColumn(false)]
        public string creator_id { get; set; }

        [HiddenInput(DisplayValue = false)]
        [ScaffoldColumn(false)]
        [JsonIgnore]
        public string serialized { get; set; }


        public Report(Types type) {
            report_type = type.ToString();
        }

        public static async void save(Report rep) {
            CerberusDBEntities db = new CerberusDBEntities();
            
            if (rep.id == null)
            {
                db.Reports.Add(rep);
            }
            else {
                db.Reports.Attach(rep);
            }
            
            await db.SaveChangesAsync();
        }

        public Report to_generic() {
            serialized = JsonSerializer.Serialize(this);
            return this;
        }
        public Report from_generic()
        {
            switch ((Types)Enum.Parse(typeof(Types), report_type))
            {
                case Types.WHRelease:
                    return JsonSerializer.Deserialize<WHReleaseReport>(serialized);
                case Types.WHInventarisation:
                    return JsonSerializer.Deserialize<WHInventarisationReport>(serialized);
                case Types.WHReplenishment:
                    return JsonSerializer.Deserialize<WHReplenishmentReport>(serialized);
                case Types.WHShipment:
                    return JsonSerializer.Deserialize<WHShipmentReport>(serialized);
                case Types.WHWorkShiftReplenishment:
                    return JsonSerializer.Deserialize<WHWorkShiftReplenishmentReport>(serialized);
                case Types.FSWorkShift:
                    return JsonSerializer.Deserialize<FSWorkShiftReport>(serialized);
                default:
                    return null;
            }
            
        }
    }
}
